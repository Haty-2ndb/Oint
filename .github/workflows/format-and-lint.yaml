name: Format, Lint, Type-Check, and Test

on:
  pull_request:
permissions:
  contents: write
  pull-requests: write

env:
  NODE_VERSION: 16

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    outputs:
      format: ${{ steps.format.outputs.status }}
      format_output: ${{ steps.format.outputs.output }}
      lint: ${{ steps.lint.outputs.status }}
      lint_output: ${{ steps.lint.outputs.output }}
      type_check: ${{ steps.type_check.outputs.status }}
      type_check_output: ${{ steps.type_check.outputs.output }}
      tests: ${{ steps.tests.outputs.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run ci:format
        id: format
        continue-on-error: true
        run: |
          RESULT=$(npm run ci:format 2>&1 || echo "job_status:failed")
          
          echo "$RESULT"
          echo "output=$RESULT" >> "$GITHUB_OUTPUT"
          
          if echo "$RESULT" | grep -q "job_status:failed"; then
            echo 'status=failure' >> "$GITHUB_OUTPUT"
            exit 1
          else
            echo 'status=success' >> "$GITHUB_OUTPUT"
          fi

      - name: Run ci:lint
        id: lint
        continue-on-error: true
        run: |
          RESULT=$(npm run ci:lint 2>&1 || echo "job_status:failed")
          
          echo "$RESULT"
          echo "output=$RESULT" >> "$GITHUB_OUTPUT"
          
          if echo "$RESULT" | grep -q "job_status:failed"; then
            echo 'status=failure' >> "$GITHUB_OUTPUT"
            exit 1
          else
            echo 'status=success' >> "$GITHUB_OUTPUT"
          fi

      - name: Run ci:type-check
        id: type_check
        continue-on-error: true
        run: |
          RESULT=$(npm run ci:type-check 2>&1 || echo "job_status:failed")
          
          echo "$RESULT"
          echo "output=$RESULT" >> "$GITHUB_OUTPUT"
          
          if echo "$RESULT" | grep -q "job_status:failed"; then
            echo 'status=failure' >> "$GITHUB_OUTPUT"
            exit 1
          else
            echo 'status=success' >> "$GITHUB_OUTPUT"
          fi
  

  test:
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm run ci:test

  comment:
    runs-on: ubuntu-latest
    needs: [ checks, test ]
    if: github.event_name == 'pull_request'
    steps:
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v2
        env:
          FORMAT: ${{ needs.checks.outputs.format }}
          FORMAT_OUTPUT: ${{ needs.checks.outputs.format_output }}
          LINT: ${{ needs.checks.outputs.lint }}
          LINT_OUTPUT: ${{ needs.checks.outputs.lint_output }}
          TYPE_CHECK: ${{ needs.checks.outputs.type_check }}
          TYPE_CHECK_OUT: ${{ needs.checks.outputs.type_check_output }}
          TEST: ${{ needs.test.result }}

        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            # Summary of Format, Lint, Type-Check, and Test Results
            
            ## Job Link:
            [Run Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ## Summary
            
            | Job Name | Status |
            | --- | --- |
            | Format Check | ${{ '$FORMAT' == 'success' && '✅' || '❌' }} |
            | Lint Check | ${{ '$LINT' == 'success' && '✅' || '❌' }} |
            | Type-Check | ${{ '$TYPE_CHECK' == 'success' && '✅' || '❌' }} |
            | Test | ${{ '$TEST' == 'success' && '✅' || '❌' }} |
            
            ## Details
            
            <details>
            <summary>Format Check Output</summary>
            
            ```
            ${{ 'FORMAT_OUTPUT' }}
            ```
            
            </details>
            
            <details>
            <summary>Lint Check Output</summary>
            
            ```
            ${{ 'LINT_OUTPUT' }}
            ```
            
            </details>
            
            <details>
            <summary>Type-Check Output</summary>
            
            ```
            ${{ 'TYPE_CHECK_OUTPUT' }}
            ```
            
            </details>

      - name: Check for failures
        id: check-failures
        run: |
          if [ "${{ needs.checks.outputs.format }}" == "failure" ]; then
            echo "Format check failed"
            exit 1
          fi
          if [ "${{ needs.checks.outputs.lint }}" == "failure" ]; then
            echo "Lint check failed"
            exit 1
          fi
          if [ "${{ needs.checks.outputs.type_check }}" == "failure" ]; then
            echo "Type-check failed"
            exit 1
          fi

